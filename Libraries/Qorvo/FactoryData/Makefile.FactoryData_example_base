#Generated from:
# $(BASEDIR)/../../../Libraries/Qorvo/FactoryData/FactoryData_example_base.py


SHELL = /bin/bash

ifndef BASEDIR
BASEDIR:=$(abspath $(dir $(abspath $(lastword $(MAKEFILE_LIST)))))
endif

ROOTDIR?=$(BASEDIR)/../../..

WORKDIR ?= $(BASEDIR)/../../../Work/FactoryData_example_base

LIBFACTORYDATA_EXAMPLE_BASE_A := $(WORKDIR)/libFactoryData_example_base.a

TOOLCHAIN ?= /usr
ifeq (,$(TOOLCHAIN))
# Will use the path variable to find the compiler
Q_TOOLCHAIN_PREFIX=
else
# Use an absolute path, add bin, path separator
Q_TOOLCHAIN_PREFIX= $(TOOLCHAIN)/bin/
endif

Q_DAC_CERT ?= $(BASEDIR)/../../../Components/ThirdParty/Matter/repo/credentials/test/attestation/Chip-Test-DAC-FFF1-8000-0005-Cert.der
Q_DAC_KEY ?= $(BASEDIR)/../../../Components/ThirdParty/Matter/repo/credentials/test/attestation/Chip-Test-DAC-FFF1-8000-0005-Key.der
Q_PAI_CERT ?= $(BASEDIR)/../../../Components/ThirdParty/Matter/repo/credentials/test/attestation/Chip-Test-PAI-FFF1-8000-Cert.der
Q_CERTIFICATION_DECLARATION ?= $(BASEDIR)/../../../Components/ThirdParty/Matter/repo/credentials/test/certification-declaration/Chip-Test-CD-FFF2-8001.der


OBJCOPY ?= $(Q_TOOLCHAIN_PREFIX)arm-none-eabi-objcopy -I binary -O elf32-littlearm -B armv7e-m
AR ?= $(Q_TOOLCHAIN_PREFIX)arm-none-eabi-ar
GENERATE_FACTORY_DATA ?= $(BASEDIR)/../../../Tools/FactoryData/generate_factory_data.py

.PHONY:all
all: $(LIBFACTORYDATA_EXAMPLE_BASE_A)

ifeq ("$(wildcard $(GENERATE_FACTORY_DATA))","")
$(error $(GENERATE_FACTORY_DATA) does not exist!)
endif
ifeq ("$(wildcard $(Q_DAC_CERT))","")
$(error $(Q_DAC_CERT) does not exist!)
endif
ifeq ("$(wildcard $(Q_DAC_KEY))","")
$(error $(Q_DAC_KEy) does not exist!)
endif
ifeq ("$(wildcard $(Q_PAI_CERT))","")
$(error $(Q_PAI_CERT) does not exist!)
endif
ifeq ("$(wildcard $(Q_CERTIFICATION_DECLARATION))","")
$(error $(Q_CERTIFICATION_DECLARATION) does not exist!)
endif

# NOTE: we 'cd' to the dir that has the .bin file so objcopy will not add in a prefix path to the symbol.
.PRECIOUS: $(LIBFACTORYDATA_EXAMPLE_BASE_A)
$(LIBFACTORYDATA_EXAMPLE_BASE_A): $(GENERATE_FACTORY_DATA) $(Q_DAC_CERT) $(Q_DAC_KEY) $(Q_PAI_CERT) $(Q_CERTIFICATION_DECLARATION)
	mkdir -p $(WORKDIR) && \
	python3 $(GENERATE_FACTORY_DATA) \
	 --dac-cert $(Q_DAC_CERT) \
     --dac-key $(Q_DAC_KEY) \
     --pai-cert $(Q_PAI_CERT) \
     --certification-declaration $(Q_CERTIFICATION_DECLARATION) \
     --maximum-size=0x800 \
	 --out_file $(WORKDIR)/factory_data.bin && \
	cd $(WORKDIR) && \
	$(OBJCOPY) --prefix-sections=factory_data factory_data.bin factory_data.o && \
	$(AR) rcs $(shell realpath --canonicalize-missing --relative-to $(WORKDIR) $(LIBFACTORYDATA_EXAMPLE_BASE_A)) factory_data.o

export_prerequisites: $(LIBFACTORYDATA_EXAMPLE_BASE_A)

applib: $(LIBFACTORYDATA_EXAMPLE_BASE_A)

.PHONY:clean
clean:
	-rm -r $(WORKDIR)
