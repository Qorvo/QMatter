#Generated from:
# $(BASEDIR)/../../../Libraries/Qorvo/OpenThreadQorvoGlue/libopenthread_qpg6105_ftd_thread_certification.py

ifndef BASEDIR
BASEDIR:=$(abspath $(dir $(abspath $(lastword $(MAKEFILE_LIST)))))
endif
# Global vars
OPENTHREAD_REPO_DIR ?= $(BASEDIR)/../../../Components/ThirdParty/Matter/repo/third_party/openthread/repo
FREERTOS_REPO_DIR ?= $(BASEDIR)/../../../Components/ThirdParty/Matter/repo/third_party/freertos/repo
OS_USED?=LINUX
GPHUB_ROOT?=/builds/20551897/1/depot/gpHub
ROOTDIR?=$(BASEDIR)/../../..
WORKDIR?=$(BASEDIR)/../../../Work/OpenThreadQorvoGlue_qpg6105_ftd_thread_certification
ENV_PATH?=$(BASEDIR)/../../..
PYTHON_BIN?=/usr/bin/python3
CURRENT_CONF:=libopenthread_qpg6105_ftd_thread_certification.py
EXTRA_CONF:=

CONFIG_HEADER:=$(BASEDIR)/../../../Libraries/Qorvo/OpenThreadQorvoGlue/gen/OpenThreadQorvoGlue_qpg6105_ftd_thread_certification/qorvo_config.h
INTERNALS_HEADER:=$(BASEDIR)/../../../Libraries/Qorvo/OpenThreadQorvoGlue/gen/OpenThreadQorvoGlue_qpg6105_ftd_thread_certification/qorvo_internals.h
PREINCLUDE_HEADER:=$(BASEDIR)/../../../Libraries/Qorvo/OpenThreadQorvoGlue/gen/OpenThreadQorvoGlue_qpg6105_ftd_thread_certification/qorvo_config.h

PREBUILD_SCRIPT:=

POSTBUILD_SCRIPT:=

FLAGS=
# Build variables
ARMCHIP=K8E
CFLAGS_COMPILER += -ffile-prefix-map=/builds/20551897/1/depot/Components/Qorvo/OpenThread=QorvoThreadApp
CFLAGS_COMPILER += -ffile-prefix-map=/builds/20551897/1/depot/Components/Qorvo=QorvoComponents
CFLAGS_COMPILER += -ffile-prefix-map=/builds/20551897/1/depot/Components/ThirdParty=ThirdParty
CFLAGS_COMPILER += -ffile-prefix-map=/builds/20551897/1/depot/gpHub/Components/ThirdParty/P959_ot-qorvo=ot-qorvo
CFLAGS_COMPILER += -ffile-prefix-map=/builds/20551897/1/depot/gpHub=ThirdParty
CFLAGS_COMPILER += -ffile-prefix-map=/builds/20551897/1/depot=QorvoSDK
CFLAGS_COMPILER += -ffile-prefix-map=/mnt/c/gpHub=ThirdParty
CFLAGS_COMPILER += -ffile-prefix-map=/mnt/r=ThirdParty
MCU=cortex-m4
PRODUCTID?=QPG6105
SRC_DISABLE_ALIGNMENT_ERROR+=$(BASEDIR)/../../../Components/ThirdParty/Silex/cryptosoc/libcryptosoc/src/cryptodma.c
SRC_DISABLE_ALIGNMENT_ERROR+=$(BASEDIR)/../../../Components/ThirdParty/Silex/cryptosoc/libcryptosoc/src/memcmp.c
SRC_DISABLE_ALIGNMENT_ERROR+=$(BASEDIR)/../../../Components/ThirdParty/Silex/cryptosoc/libcryptosoc/src/sx_derive_key_alg.c
SRC_DISABLE_ALIGNMENT_ERROR+=$(BASEDIR)/../../../Components/ThirdParty/Silex/cryptosoc/libcryptosoc/src/sx_rng.c
SRC_DISABLE_ALIGNMENT_WARNING+=$(FREERTOS_REPO_DIR)/stream_buffer.c

# Main target file
APPLIB:=$(WORKDIR)/libOpenThreadQorvoGlue_qpg6105_ftd_thread_certification.a


# Compiler specifics
COMPILER?=armgccemb
COMPILER_VERSION:=9_2019-q4-major
TOOLCHAIN?=/usr
PROGRAMMER?=xsif
PROGRAM_EXT:=a
LIB_EXT:=a

SRC=
SRC_NOWARNING=
ASRC=
INC=
AINC=
LIB=

# Application defines
APPNAME:=OpenThreadQorvoGlue_qpg6105_ftd_thread_certification
INC_APP:=
INC_APP+=-I$(BASEDIR)/../../../Components/Qorvo/HAL_PLATFORM/inc
INC_APP+=-I$(BASEDIR)/../../../Components/Qorvo/HAL_PLATFORM/inc/compiler/ARMGCCEMB
INC_APP+=-I$(BASEDIR)/../../../Libraries/Qorvo/OpenThreadQorvoGlue/gen/OpenThreadQorvoGlue_qpg6105_ftd_thread_certification
INC+=$(INC_APP)
AINC_APP:=
AINC_APP+=-I$(BASEDIR)/../../../Libraries/Qorvo/OpenThreadQorvoGlue/gen/OpenThreadQorvoGlue_qpg6105_ftd_thread_certification
AINC+=$(AINC_APP)

#Compilation flags are defined in $(BASEDIR)/../../../Libraries/Qorvo/OpenThreadQorvoGlue/gen/OpenThreadQorvoGlue_qpg6105_ftd_thread_certification/qorvo_config.h
FLAGS+=-DGP_CONFIG_HEADER
LINKERSCRIPT:=$(BASEDIR)/../../../Work/OpenThreadQorvoGlue_qpg6105_ftd_thread_certification/OpenThreadQorvoGlue_qpg6105_ftd_thread_certification.ld
APPFIRMWARE:=

COMPS:=

#Component sources
#Depends on:
# src: gpLog
COMPS+=gpAssert
INC_gpAssert:=
INC_gpAssert+=-I$(BASEDIR)/../../../Components/Qorvo/OS/gpAssert/inc
INC+=$(INC_gpAssert)

#Depends on:
# src: 
COMPS+=gpBaseComps
INC_gpBaseComps:=
INC_gpBaseComps+=-I$(BASEDIR)/../../../Components/Qorvo/OS/gpBaseComps/inc
INC+=$(INC_gpBaseComps)

#Depends on:
# src: 
COMPS+=gpBsp
INC_gpBsp:=
INC_gpBsp+=-I$(BASEDIR)/../../../Components/Qorvo/BSP/gpBsp/inc
INC_gpBsp+=-I$(BASEDIR)/../../../Components/Qorvo/BSP/gpBsp/inc/BLE
INC_gpBsp+=-I$(BASEDIR)/../../../Components/Qorvo/BSP/gpBsp/inc/FTS
INC_gpBsp+=-I$(BASEDIR)/../../../Components/Qorvo/BSP/gpBsp/inc/FoundationAndSilicon
INC_gpBsp+=-I$(BASEDIR)/../../../Components/Qorvo/BSP/gpBsp/inc/Gateway
INC_gpBsp+=-I$(BASEDIR)/../../../Components/Qorvo/BSP/gpBsp/inc/PTC
INC_gpBsp+=-I$(BASEDIR)/../../../Components/Qorvo/BSP/gpBsp/inc/PeripheralExamples
INC_gpBsp+=-I$(BASEDIR)/../../../Components/Qorvo/BSP/gpBsp/inc/RemoteControl
INC_gpBsp+=-I$(BASEDIR)/../../../Components/Qorvo/BSP/gpBsp/inc/SmartHomeAndLighting
INC+=$(INC_gpBsp)

#Depends on:
# src: gpAssert, gpLog, gpUtils
COMPS+=gpCom
INC_gpCom:=
INC_gpCom+=-I$(BASEDIR)/../../../Components/Qorvo/BaseUtils/gpCom/inc
INC_gpCom+=-I$(BASEDIR)/../../../Components/Qorvo/BaseUtils/gpCom/inc/gen
INC+=$(INC_gpCom)

#Depends on:
# src: gpPd, gphal
COMPS+=gpEncryption
INC_gpEncryption:=
INC_gpEncryption+=-I$(BASEDIR)/../../../Components/Qorvo/BaseUtils/gpEncryption/inc
INC+=$(INC_gpEncryption)

#Depends on:
# src: 
COMPS+=gpFreeRTOS
SRC_gpFreeRTOS:=
SRC_gpFreeRTOS+=$(BASEDIR)/../../../Components/Qorvo/OS/gpFreeRTOS/config/hooks.c
SRC_gpFreeRTOS+=$(FREERTOS_REPO_DIR)/list.c
SRC_gpFreeRTOS+=$(FREERTOS_REPO_DIR)/portable/GCC/ARM_CM3/port.c
SRC_gpFreeRTOS+=$(FREERTOS_REPO_DIR)/portable/MemMang/heap_3.c
SRC_gpFreeRTOS+=$(FREERTOS_REPO_DIR)/queue.c
SRC_gpFreeRTOS+=$(FREERTOS_REPO_DIR)/stream_buffer.c
SRC_gpFreeRTOS+=$(FREERTOS_REPO_DIR)/tasks.c
SRC_gpFreeRTOS+=$(FREERTOS_REPO_DIR)/timers.c
SRC+=$(SRC_gpFreeRTOS)
INC_gpFreeRTOS:=
INC_gpFreeRTOS+=-I$(BASEDIR)/../../../Components/Qorvo/OS/gpFreeRTOS/config
INC_gpFreeRTOS+=-I$(BASEDIR)/../../../Components/Qorvo/OS/gpFreeRTOS/inc
INC_gpFreeRTOS+=-I$(FREERTOS_REPO_DIR)/include
INC_gpFreeRTOS+=-I$(FREERTOS_REPO_DIR)/portable/GCC/ARM_CM3
INC+=$(INC_gpFreeRTOS)
AINC_gpFreeRTOS:=
AINC_gpFreeRTOS+=-I$(BASEDIR)/../../../Components/Qorvo/OS/gpFreeRTOS/config
AINC+=$(AINC_gpFreeRTOS)
SRC_NOWARNING+=$(SRC_gpFreeRTOS)

#Depends on:
# src: 
COMPS+=gpJumpTablesMatter_k8e
INC_gpJumpTablesMatter_k8e:=
INC_gpJumpTablesMatter_k8e+=-I$(BASEDIR)/../../../Components/Qorvo/ROM/k8e/gpJumpTablesMatter_k8e/inc
INC+=$(INC_gpJumpTablesMatter_k8e)

#Depends on:
# src: 
COMPS+=gpJumpTables_k8e
INC_gpJumpTables_k8e:=
INC_gpJumpTables_k8e+=-I$(BASEDIR)/../../../Components/Qorvo/ROM/k8e/gpJumpTables_k8e/inc
INC+=$(INC_gpJumpTables_k8e)

#Depends on:
# src: gpAssert, gpCom
COMPS+=gpLog
INC_gpLog:=
INC_gpLog+=-I$(BASEDIR)/../../../Components/Qorvo/OS/gpLog/inc
INC+=$(INC_gpLog)

#Depends on:
# src: gphal, gpAssert, gpPd, gpPad, gpRxArbiter, gpPoolMem, gpEncryption
# inc: gpStat
COMPS+=gpMacCore
INC_gpMacCore:=
INC_gpMacCore+=-I$(BASEDIR)/../../../Components/Qorvo/802_15_4/gpMacCore/inc
INC_gpMacCore+=-I$(BASEDIR)/../../../Components/Qorvo/802_15_4/gpMacCore/src
INC_gpMacCore+=-I$(BASEDIR)/../../../Libraries/Qorvo/OpenThreadQorvoGlue/gen/OpenThreadQorvoGlue_qpg6105_ftd_thread_certification/gpMacCore/inc
INC_gpMacCore+=-I$(BASEDIR)/../../../Libraries/Qorvo/OpenThreadQorvoGlue/gen/OpenThreadQorvoGlue_qpg6105_ftd_thread_certification/gpMacCore/src
INC+=$(INC_gpMacCore)
AINC_gpMacCore:=
AINC_gpMacCore+=-I$(BASEDIR)/../../../Libraries/Qorvo/OpenThreadQorvoGlue/gen/OpenThreadQorvoGlue_qpg6105_ftd_thread_certification/gpMacCore/inc
AINC_gpMacCore+=-I$(BASEDIR)/../../../Libraries/Qorvo/OpenThreadQorvoGlue/gen/OpenThreadQorvoGlue_qpg6105_ftd_thread_certification/gpMacCore/src
AINC+=$(AINC_gpMacCore)

#Depends on:
# src: gpMacCore, gpAssert, gpPd, gpSched
# inc: gpStat
COMPS+=gpMacDispatcher
INC_gpMacDispatcher:=
INC_gpMacDispatcher+=-I$(BASEDIR)/../../../Components/Qorvo/802_15_4/gpMacDispatcher/inc
INC_gpMacDispatcher+=-I$(BASEDIR)/../../../Components/Qorvo/802_15_4/gpMacDispatcher/inc/gen
INC_gpMacDispatcher+=-I$(BASEDIR)/../../../Components/Qorvo/802_15_4/gpMacDispatcher/src
INC_gpMacDispatcher+=-I$(BASEDIR)/../../../Libraries/Qorvo/OpenThreadQorvoGlue/gen/OpenThreadQorvoGlue_qpg6105_ftd_thread_certification/gpMacDispatcher/inc
INC+=$(INC_gpMacDispatcher)
AINC_gpMacDispatcher:=
AINC_gpMacDispatcher+=-I$(BASEDIR)/../../../Libraries/Qorvo/OpenThreadQorvoGlue/gen/OpenThreadQorvoGlue_qpg6105_ftd_thread_certification/gpMacDispatcher/inc
AINC+=$(AINC_gpMacDispatcher)

#Depends on:
# src: gpPoolMem, gphal, gpAssert, gpLog, gpSched, gpUtils
# inc: gpPoolMem
COMPS+=gpNvm
INC_gpNvm:=
INC_gpNvm+=-I$(BASEDIR)/../../../Components/Qorvo/BaseUtils/gpNvm/inc
INC_gpNvm+=-I$(BASEDIR)/../../../Libraries/Qorvo/OpenThreadQorvoGlue/gen/OpenThreadQorvoGlue_qpg6105_ftd_thread_certification/gpNvm/inc
INC+=$(INC_gpNvm)
AINC_gpNvm:=
AINC_gpNvm+=-I$(BASEDIR)/../../../Libraries/Qorvo/OpenThreadQorvoGlue/gen/OpenThreadQorvoGlue_qpg6105_ftd_thread_certification/gpNvm/inc
AINC+=$(AINC_gpNvm)

#Depends on:
# src: gpLog, gpAssert, gphal
COMPS+=gpPad
INC_gpPad:=
INC_gpPad+=-I$(BASEDIR)/../../../Components/Qorvo/HAL_RF/gpPad/inc
INC+=$(INC_gpPad)

#Depends on:
# src: gpLog, gpAssert
# inc: gpSched, gphal
COMPS+=gpPd
INC_gpPd:=
INC_gpPd+=-I$(BASEDIR)/../../../Components/Qorvo/HAL_RF/gpPd/inc
INC+=$(INC_gpPd)

#Depends on:
# src: gpLog, gpAssert, gpWmrk
# inc: gpPd
COMPS+=gpPoolMem
INC_gpPoolMem:=
INC_gpPoolMem+=-I$(BASEDIR)/../../../Components/Qorvo/OS/gpPoolMem/inc
INC_gpPoolMem+=-I$(BASEDIR)/../../../Libraries/Qorvo/OpenThreadQorvoGlue/gen/OpenThreadQorvoGlue_qpg6105_ftd_thread_certification/gpPoolMem/inc
INC+=$(INC_gpPoolMem)
AINC_gpPoolMem:=
AINC_gpPoolMem+=-I$(BASEDIR)/../../../Libraries/Qorvo/OpenThreadQorvoGlue/gen/OpenThreadQorvoGlue_qpg6105_ftd_thread_certification/gpPoolMem/inc
AINC+=$(AINC_gpPoolMem)

#Depends on:
# src: gpLog, gpAssert
COMPS+=gpRadio
INC_gpRadio:=
INC_gpRadio+=-I$(BASEDIR)/../../../Components/Qorvo/HAL_RF/gpRadio/inc
INC+=$(INC_gpRadio)

#Depends on:
# src: gpLog, gpSched, gphal
COMPS+=gpRandom
INC_gpRandom:=
INC_gpRandom+=-I$(BASEDIR)/../../../Components/Qorvo/BaseUtils/gpRandom/inc
INC_gpRandom+=-I$(BASEDIR)/../../../Libraries/Qorvo/OpenThreadQorvoGlue/gen/OpenThreadQorvoGlue_qpg6105_ftd_thread_certification/gpRandom/inc
INC+=$(INC_gpRandom)
AINC_gpRandom:=
AINC_gpRandom+=-I$(BASEDIR)/../../../Libraries/Qorvo/OpenThreadQorvoGlue/gen/OpenThreadQorvoGlue_qpg6105_ftd_thread_certification/gpRandom/inc
AINC+=$(AINC_gpRandom)

#Depends on:
# src: 
COMPS+=gpReset
INC_gpReset:=
INC_gpReset+=-I$(BASEDIR)/../../../Components/Qorvo/OS/gpReset/inc
INC+=$(INC_gpReset)

#Depends on:
# src: gpAssert, gphal, gpLog
COMPS+=gpRxArbiter
INC_gpRxArbiter:=
INC_gpRxArbiter+=-I$(BASEDIR)/../../../Components/Qorvo/802_15_4/gpRxArbiter/inc
INC+=$(INC_gpRxArbiter)

#Depends on:
# src: gpAssert, gpLog, gpUtils, gpFreeRTOS
COMPS+=gpSched
INC_gpSched:=
INC_gpSched+=-I$(BASEDIR)/../../../Components/Qorvo/OS/gpSched/inc
INC_gpSched+=-I$(BASEDIR)/../../../Components/Qorvo/OS/gpSched/src
INC+=$(INC_gpSched)

#Depends on:
# src: gpLog, gpAssert
COMPS+=gpStat
INC_gpStat:=
INC_gpStat+=-I$(BASEDIR)/../../../Components/Qorvo/BaseUtils/gpStat/inc
INC+=$(INC_gpStat)

#Depends on:
# src: gpAssert, gpLog
COMPS+=gpUtils
INC_gpUtils:=
INC_gpUtils+=-I$(BASEDIR)/../../../Components/Qorvo/BaseUtils/gpUtils/inc
INC+=$(INC_gpUtils)

#Depends on:
# src: gpLog, gpAssert
COMPS+=gpWmrk
INC_gpWmrk:=
INC_gpWmrk+=-I$(BASEDIR)/../../../Components/Qorvo/BaseUtils/gpWmrk/inc
INC+=$(INC_gpWmrk)

#Depends on:
# src: gpAssert, gpReset, silexCryptoSoc, gpSched, gpRandom, gpJumpTables_k8e, gpPad, gpRxArbiter, gpRadio, gpPd, rt_nrt_common, gpUtils
# inc: gpStat, gpBsp, gpEncryption
COMPS+=gphal
INC_gphal:=
INC_gphal+=-I$(BASEDIR)/../../../Components/Qorvo/HAL_RF/gphal/inc
INC_gphal+=-I$(BASEDIR)/../../../Components/Qorvo/HAL_RF/gphal/inc/gen
INC_gphal+=-I$(BASEDIR)/../../../Components/Qorvo/HAL_RF/gphal/k8e/inc
INC_gphal+=-I$(BASEDIR)/../../../Components/Qorvo/HAL_RF/gphal/k8e/src
INC_gphal+=-I$(BASEDIR)/../../../Components/Qorvo/HAL_RF/gphal/src
INC_gphal+=-I$(BASEDIR)/../../../Components/Qorvo/ROM/k8e/romcomps/gphal/inc
INC+=$(INC_gphal)
AINC_gphal:=
AINC_gphal+=-I$(BASEDIR)/../../../Components/Qorvo/HAL_RF/gphal/k8e/inc
AINC+=$(AINC_gphal)

#Depends on:
# src: gpAssert, gphal, gpJumpTables_k8e, gpJumpTablesMatter_k8e
# inc: gpBsp
COMPS+=halCortexM4
INC_halCortexM4:=
INC_halCortexM4+=-I$(BASEDIR)/../../../Components/Qorvo/HAL_PLATFORM/halCortexM4/inc
INC_halCortexM4+=-I$(BASEDIR)/../../../Components/Qorvo/HAL_PLATFORM/halCortexM4/k8e/inc
INC_halCortexM4+=-I$(BASEDIR)/../../../Components/ThirdParty/TOOL_CMSIS/CMSIS/Core/Include
INC+=$(INC_halCortexM4)

#Depends on:
# src: 
# inc: gpAssert, gpBaseComps, gpSched, gpPd, gpMacDispatcher, gpRxArbiter, gpRandom, gpNvm, gpCom
COMPS+=qvOT
SRC_qvOT:=
SRC_qvOT+=$(BASEDIR)/../../../Components/Qorvo/OpenThread/qvOT/src/alarm_qorvo.c
SRC_qvOT+=$(BASEDIR)/../../../Components/Qorvo/OpenThread/qvOT/src/com_qorvo.c
SRC_qvOT+=$(BASEDIR)/../../../Components/Qorvo/OpenThread/qvOT/src/misc_qorvo.c
SRC_qvOT+=$(BASEDIR)/../../../Components/Qorvo/OpenThread/qvOT/src/platform_qorvo.c
SRC_qvOT+=$(BASEDIR)/../../../Components/Qorvo/OpenThread/qvOT/src/radio_qorvo.c
SRC_qvOT+=$(BASEDIR)/../../../Components/Qorvo/OpenThread/qvOT/src/random_qorvo.c
SRC_qvOT+=$(BASEDIR)/../../../Components/Qorvo/OpenThread/qvOT/src/settings_qorvo.c
SRC+=$(SRC_qvOT)
INC_qvOT:=
INC_qvOT+=-I$(BASEDIR)/../../../Components/Qorvo/OpenThread/qvOT/inc
INC_qvOT+=-I$(OPENTHREAD_REPO_DIR)/examples/platforms
INC_qvOT+=-I$(OPENTHREAD_REPO_DIR)/include
INC_qvOT+=-I$(OPENTHREAD_REPO_DIR)/src/core
INC_qvOT+=-I$(BASEDIR)/../../../Components/ThirdParty/P959_ot-qorvo/src/qpg6105
INC+=$(INC_qvOT)
SRC_NOWARNING+=$(SRC_qvOT)

#Depends on:
# src: 
COMPS+=rt_nrt_common
INC_rt_nrt_common:=
INC_rt_nrt_common+=-I$(BASEDIR)/../../../Components/Qorvo/Rt/rt_nrt_common/inc
INC_rt_nrt_common+=-I$(BASEDIR)/../../../Components/Qorvo/Rt/rt_nrt_common/inc/default
INC+=$(INC_rt_nrt_common)

#Depends on:
# src: gpAssert, gpLog
COMPS+=silexCryptoSoc
INC_silexCryptoSoc:=
INC_silexCryptoSoc+=-I$(BASEDIR)/../../../Components/Qorvo/HAL_PLATFORM/silexCryptoSoc/inc
INC_silexCryptoSoc+=-I$(BASEDIR)/../../../Components/ThirdParty/Silex/cryptosoc/libcryptosoc/include
INC_silexCryptoSoc+=-I$(BASEDIR)/../../../Components/ThirdParty/Silex/cryptosoc/libcryptosoc/src
INC+=$(INC_silexCryptoSoc)
AINC_silexCryptoSoc:=
AINC_silexCryptoSoc+=-I$(BASEDIR)/../../../Components/ThirdParty/Silex/cryptosoc/libcryptosoc/include
AINC_silexCryptoSoc+=-I$(BASEDIR)/../../../Components/ThirdParty/Silex/cryptosoc/libcryptosoc/src
AINC+=$(AINC_silexCryptoSoc)


-include $(BASEDIR)/custom.mk
include $(ENV_PATH)/make/gpcommon.mk
